@model IEnumerable<InteractiveChat.DTOs.FriendRequestDTO>
<ul class="list-group mt-4">
    @if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <img src=@item.SenderProfilePicUrl class="small-images" alt="user profile pic"/>
                @item.SenderFirstName @item.SenderLastName
                <button class="btn btn-primary friendActionButton" id="acceptRequestButton" data-username="@item.SenderUserName">Aceptar</button>
                <button class="btn btn-primary friendActionButton" id="rejectRequestButton" data-username="@item.SenderUserName">Rechazar</button>
            </li>
        }
    }
    else
    {
        <li class="list-group-item">
            <h1>No tiene solicitudes de amistad.</h1>
        </li>
    }
</ul>


@section Scripts {
    <script>
        const friendshipUrls = {
            acceptFriendRequest: '@Url.Action("AcceptFriendRequest", "Friendship")',
            rejectFriendRequest: '@Url.Action("RejectFriendRequest", "Friendship")'
        };
    </script>
    <script src="~/js/friendrequestActions.js"></script>
}